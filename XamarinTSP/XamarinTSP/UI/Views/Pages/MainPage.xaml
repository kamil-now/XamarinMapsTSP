<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:views="clr-namespace:XamarinTSP.UI.Views"
             xmlns:enums="clr-namespace:XamarinTSP.GoogleMapsApi.Enums"
             xmlns:behaviors="clr-namespace:XamarinTSP.UI.Behaviors"
             xmlns:converters="clr-namespace:XamarinTSP.UI.Converters"
             x:Class="XamarinTSP.UI.Views.MainPage"
             NavigationPage.HasNavigationBar="False">
    <ContentPage.Resources>
        <converters:NegateBoolConverter x:Key="NegateBoolConverter" />
        <converters:DistanceConverter x:Key="DistanceConverter" />
        <converters:TimeSpanConverter x:Key="TimeSpanConverter" />
    </ContentPage.Resources>
    <ContentPage.Behaviors>
        <behaviors:EventToCommandBehavior EventName="Appearing"
                                          Command="{Binding OnAppearingCommand}" />
    </ContentPage.Behaviors>
    <ContentPage.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="5*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Row="0"
                        Grid.Column="0"
                        Text="&#xF10B;"
                        FontFamily="{StaticResource MaterialDesignFont}"
                        Command="{Binding SetCarModeCommand}"
                        IsEnabled="{Binding IsAlgorithmRunning, Converter={StaticResource NegateBoolConverter}}">
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource IconButton}">
                            <Setter Property="TextColor"
                                    Value="Black" />
                            <Setter Property="FontSize"
                                    Value="25" />
                            <Style.Triggers>
                                <DataTrigger TargetType="Button"
                                             Binding="{Binding TravelMode}"
                                             Value="{x:Static enums:TravelMode.Driving}">
                                    <Setter Property="TextColor"
                                            Value="CornflowerBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Grid.Row="1"
                        Grid.Column="0"
                        Text="&#xF0A3;"
                        FontFamily="{StaticResource MaterialDesignFont}"
                        Command="{Binding SetBikeModeCommand}"
                        IsEnabled="{Binding IsAlgorithmRunning, Converter={StaticResource NegateBoolConverter}}">
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource IconButton}">
                            <Setter Property="TextColor"
                                    Value="Black" />
                            <Setter Property="FontSize"
                                    Value="25" />
                            <Style.Triggers>
                                <DataTrigger TargetType="Button"
                                             Binding="{Binding TravelMode}"
                                             Value="{x:Static enums:TravelMode.Bicycling}">
                                    <Setter Property="TextColor"
                                            Value="CornflowerBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Grid.Row="2"
                        Grid.Column="0"
                        Text="&#xF583;"
                        FontFamily="{StaticResource MaterialDesignFont}"
                        Command="{Binding SetWalkModeCommand}"
                        IsEnabled="{Binding IsAlgorithmRunning, Converter={StaticResource NegateBoolConverter}}">

                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource IconButton}">
                            <Setter Property="TextColor"
                                    Value="Black" />
                            <Setter Property="FontSize"
                                    Value="25" />
                            <Style.Triggers>
                                <DataTrigger TargetType="Button"
                                             Binding="{Binding TravelMode}"
                                             Value="{x:Static enums:TravelMode.Walking}">
                                    <Setter Property="TextColor"
                                            Value="CornflowerBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Frame  Grid.Row="0"
                        Grid.Column="1"
                        Grid.RowSpan="3"
                        BackgroundColor="White"
                        BorderColor="LightGray"
                        Margin="2"
                        Padding="5,1"
                        CornerRadius="10">
                    <ListView x:Name="List"
                              ItemsSource="{Binding List.Locations, UpdateSourceEventName=CollectionChanged}">
                        <ListView.Behaviors>
                            <!--<behaviors:EventToCommandBehavior EventName="ItemTapped"
                                                              CommandParameter="{Binding Path=SelectedItem, Source={x:Reference Name=List} }"
                                                              Command="{Binding SelectLocationCommand}" />-->
                        </ListView.Behaviors>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell>
                                    <ViewCell.View>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="4*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0"
                                                   HorizontalOptions="End"
                                                   VerticalOptions="End"
                                                   Text="{Binding Index}"
                                                   FontSize="Small"
                                                   TextColor="Black" />
                                            <Label Grid.Column="1"
                                                   HorizontalOptions="Start"
                                                   VerticalOptions="End"
                                                   Text="{Binding MainDisplayString}"
                                                   FontSize="Small"
                                                   TextColor="Black"
                                                   LineBreakMode="NoWrap" />
                                            <Button Grid.Column="2"
                                                    Margin="0"
                                                    HorizontalOptions="Start"
                                                    VerticalOptions="End"
                                                    Text="&#xF377;"
                                                    FontSize="20"
                                                    Style="{StaticResource IconButton}"
                                                    FontFamily="{StaticResource MaterialDesignFont}"
                                                    CommandParameter="{Binding}"
                                                    Command="{Binding Path=BindingContext.DeleteLocationCommand, Source={x:Reference Name=List}}"
                                                    IsEnabled="{Binding Path=BindingContext.IsAlgorithmRunning, Converter={StaticResource NegateBoolConverter}, Source={x:Reference Name=List}}" />

                                        </Grid>
                                    </ViewCell.View>
                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Frame>

                <Button Grid.Row="1"
                        Grid.Column="2"
                        Grid.RowSpan="2"
                        Text="&#xF419;"
                        Style="{StaticResource IconButton}"
                        FontFamily="{StaticResource MaterialDesignFont}"
                        Command="{Binding AddLocationCommand}"
                        IsEnabled="{Binding IsAlgorithmRunning, Converter={StaticResource NegateBoolConverter}}" />
                <Button Grid.Row="0"
                        Grid.Column="2"
                        Grid.RowSpan="2"
                        Text="&#xF651;"
                        IsVisible="False"
                        Style="{StaticResource IconButton}"
                        FontFamily="{StaticResource MaterialDesignFont}">

                </Button>
            </Grid>

            <StackLayout Grid.Row="1"
                         IsVisible="{Binding RetrievingDistanceMatrix}"
                         HorizontalOptions="CenterAndExpand"
                         Orientation="Horizontal">
                <Label Text="Loading distance matrix..."
                       HorizontalOptions="Center"
                       VerticalOptions="Center" />
                <ActivityIndicator HorizontalOptions="Center"
                                   VerticalOptions="Center"
                                   Color="Black"
                                   HeightRequest="10"
                                   BackgroundColor="Transparent"
                                   IsRunning="True" />
            </StackLayout>
            <Grid Grid.Row="1"
                  MinimumHeightRequest="10"
                  IsVisible="{Binding RetrievingDistanceMatrix, Converter={StaticResource NegateBoolConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0"
                       IsVisible="{Binding RouteCalculated}"
                       Text="{Binding MapViewModel.CalculatedRoute.Time, Converter={StaticResource TimeSpanConverter}}"
                       HorizontalOptions="Center"
                       VerticalOptions="Center" />
                <Label Grid.Column="1"
                       IsVisible="{Binding RouteCalculated}"
                       Text="{Binding MapViewModel.CalculatedRoute.Distance, Converter={StaticResource DistanceConverter}}"
                       HorizontalOptions="Center"
                       VerticalOptions="Center" />
            </Grid>
            <views:MapView BindingContext="{Binding MapViewModel}"
                           Grid.Row="2"
                           IsEnabled="{Binding IsAlgorithmRunning, Converter={StaticResource NegateBoolConverter}}" />

            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                        Text="&#xF493;"
                        Style="{StaticResource IconButton}"
                        FontFamily="{StaticResource MaterialDesignFont}"
                        Command="{Binding OpenConfigurationCommand}"
                        IsEnabled="{Binding IsAlgorithmRunning, Converter={StaticResource NegateBoolConverter}}" />
                <Button Grid.Column="1"
                        x:Name="tspButton"
                        CommandParameter="{x:Reference tspButton}"
                        Command="{Binding RunTSPCommand}">
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource IconButton}">
                            <Setter Property="Text"
                                    Value="&#xF40A;" />
                            <Setter Property="FontFamily"
                                    Value="{StaticResource MaterialDesignFont}" />
                            <Style.Triggers>
                                <DataTrigger TargetType="Button"
                                             Binding="{Binding IsAlgorithmRunning}"
                                             Value="True">
                                    <Setter Property="Text"
                                            Value="&#xF3E4;" />
                                    <Setter Property="FontFamily"
                                            Value="{StaticResource MaterialDesignFont}" />
                                </DataTrigger>
                                <DataTrigger TargetType="Button"
                                             Binding="{Binding IsAlgorithmRunning}"
                                             Value="False">
                                    <Setter Property="Text"
                                            Value="&#xF40A;" />
                                    <Setter Property="FontFamily"
                                            Value="{StaticResource MaterialDesignFont}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <ActivityIndicator Grid.Column="1"
                                   HorizontalOptions="Center"
                                   VerticalOptions="Center"
                                   Color="Black"
                                   BackgroundColor="Transparent"
                                   IsVisible="{Binding RetrievingDistanceMatrix, Converter={StaticResource NegateBoolConverter}}"
                                   IsRunning="{Binding IsAlgorithmRunning}" />
                <Button Grid.Column="2"
                        Text="&#xF34D;"
                        Style="{StaticResource IconButton}"
                        FontFamily="{StaticResource MaterialDesignFont}"
                        Command="{Binding OpenInGoogleMapsCommand}"
                        IsEnabled="{Binding RouteCalculated}" />
            </Grid>

        </Grid>
    </ContentPage.Content>
</ContentPage>